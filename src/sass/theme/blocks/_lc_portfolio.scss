.portfolio {
  &__grid {
    display: grid;
    grid-template-columns: 1fr; // default: single column
    gap: 1.5rem;
  }

  &__item {
    position: relative;
    overflow: hidden;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }
  }

  // Two-column layout pattern for 4-item loop
  @media (min-width: 768px) {
    &__grid {
      grid-auto-rows: 300px;
      grid-auto-flow: dense;

      grid-template-columns: repeat(2, 1fr);
    }

    &__item:nth-child(4n + 1) {
      grid-column: 1;
      grid-row: span 1;
    }

    &__item:nth-child(4n + 2) {
      grid-column: 2;
      grid-row-start: auto;
      grid-row-end: span 2;
    }

    &__item:nth-child(4n + 3) {
      grid-column: 1;
      grid-row-start: auto;
      grid-row-end: span 2;
    }

    &__item:nth-child(4n + 4) {
      grid-column: 2;
      grid-row: span 1;
    }
  }

  // Three-column layout for 6-item loop
  @media (min-width: 992px) {
    &__grid {
      grid-template-columns: repeat(3, 1fr);
    }

    &__item:nth-child(6n + 1) {
      grid-column: 1;
      grid-row: span 1;
    }

    &__item:nth-child(6n + 2) {
      grid-column: 2;
      grid-row: span 2;
    }

    &__item:nth-child(6n + 3) {
      grid-column: 3;
      grid-row: span 1;
    }

    &__item:nth-child(6n + 4) {
      grid-column: 1;
      grid-row: span 2;
    }

    &__item:nth-child(6n + 5) {
      grid-column: 2;
      grid-row: span 1;
    }

    &__item:nth-child(6n + 6) {
      grid-column: 3;
      grid-row: span 2;
    }
  }

  .glightbox {
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    @media (min-width: 768px) {
      &:hover {
        .portfolio__caption {
          transform: translateY(0);
        }
      }
    }
    .portfolio__caption {
      position: absolute;
      bottom: 0;
      width: 100%;
      background-color: hsl(0 0 0 / 0.4);
      color: white;
      padding: 0.75rem;
      font-size: var(--fs-300);
      @media (min-width: 768px) {
        transform: translateY(100%);
      }
      transition: transform var(--transition);
    }
  }
}
